{
    "sourceFile": "src/database/services/CreateMealsServices.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1645387336692,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1645387609655,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,14 +32,14 @@\n     }\n \n     const meals = repo.create({\n       name,\n-      protein: protein ? protein : null,\n-      quantity_proteins: quantityProtein ? quantityProtein : null,\n-      carbohydrate: carbohydrate ? carbohydrate : null,\n-      quantity_carbohydrate: quantityCarbohydrate ? quantityCarbohydrate : null,\n-      vegetable: vegetable ? vegetable : null,\n-      quantity_vegetable: quantityVegetable ? quantityVegetable : null,\n+      protein: protein ? protein : \"\",\n+      quantity_proteins: quantityProtein ? quantityProtein : \"\",\n+      carbohydrate: carbohydrate ? carbohydrate : \"\",\n+      quantity_carbohydrate: quantityCarbohydrate ? quantityCarbohydrate : \"\",\n+      vegetable: vegetable ? vegetable : \"\",\n+      quantity_vegetable: quantityVegetable ? quantityVegetable : \"\",\n       created_at: new Date(),\n       user_id,\n     });\n \n"
                }
            ],
            "date": 1645387336692,
            "name": "Commit-0",
            "content": "import { getRepository } from \"typeorm\";\nimport { Meals } from \"../entities/Meals\";\nimport { Users } from \"../entities/User\";\n\nexport type MealsRequest = {\n  name: string;\n  protein: string | null;\n  quantityProtein: string | null;\n  carbohydrate: string | null;\n  quantityCarbohydrate: string | null;\n  vegetable: string | null;\n  quantityVegetable: string | null;\n  user_id: string;\n};\n\nexport class CreateMealsService {\n  async execute({\n    name,\n    protein,\n    quantityProtein,\n    carbohydrate,\n    quantityCarbohydrate,\n    vegetable,\n    quantityVegetable,\n    user_id,\n  }: MealsRequest): Promise<Meals | Error> {\n    const repo = getRepository(Meals);\n    const repoUser = getRepository(Users);\n\n    if (!(await repoUser.findOne(user_id))) {\n      return new Error(\"User does not exists\");\n    }\n\n    const meals = repo.create({\n      name,\n      protein: protein ? protein : null,\n      quantity_proteins: quantityProtein ? quantityProtein : null,\n      carbohydrate: carbohydrate ? carbohydrate : null,\n      quantity_carbohydrate: quantityCarbohydrate ? quantityCarbohydrate : null,\n      vegetable: vegetable ? vegetable : null,\n      quantity_vegetable: quantityVegetable ? quantityVegetable : null,\n      created_at: new Date(),\n      user_id,\n    });\n\n    await repo.save(meals);\n\n    return meals;\n  }\n}\n"
        }
    ]
}