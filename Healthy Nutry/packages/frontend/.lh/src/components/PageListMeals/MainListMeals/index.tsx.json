{
    "sourceFile": "src/components/PageListMeals/MainListMeals/index.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1645388063111,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1645388070800,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,15 +76,15 @@\n         array: newArray,\n       });\n \n     if (valueSelected?.value === \"proteins\") {\n-      newArray = meals.filter((meal) => meal.protein != \"\");\n+      newArray = meals.filter((meal) => meal.protein !== \"\");\n       setNewArray();\n     } else if (valueSelected?.value === \"carbohydrate\") {\n-      newArray = meals.filter((meal) => meal.carbohydrate != \"\");\n+      newArray = meals.filter((meal) => meal.carbohydrate !== \"\");\n       setNewArray();\n     } else if (valueSelected?.value === \"vegetable\") {\n-      newArray = meals.filter((meal) => meal.vegetable != \"\");\n+      newArray = meals.filter((meal) => meal.vegetable !== \"\");\n       setNewArray();\n     } else {\n       newArray = meals;\n     }\n"
                },
                {
                    "date": 1645388359235,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -110,9 +110,9 @@\n     filterArrayFromChoice();\n   }, [valueSelected]);\n \n   useEffect(() => {\n-    console.log(\"useState atualizou\");\n+    console.log(\"\");\n   }, [arrayMeals]);\n \n   return (\n     <>\n"
                }
            ],
            "date": 1645388063111,
            "name": "Commit-0",
            "content": "import { MealsRequest } from \"api/requestsApi\";\nimport Logo from \"components/globalComponents/Logo\";\nimport Select, { SingleValue } from \"react-select\";\n\nimport { useUserContext } from \"hooks/userContext\";\nimport { useState, useEffect } from \"react\";\nimport ContentMeals from \"../ContentMeals\";\nimport Pagination from \"../Pagination\";\n\nimport * as S from \"./styles\";\nimport { useRouter } from \"next/router\";\n\ntype mealsProps = {\n  meals: MealsRequest[];\n};\n\ntype selectProps = {\n  value: string;\n  label: string;\n};\n\ntype isArrayLengthprops = {\n  isLengthArray: boolean;\n  array: MealsRequest[];\n};\nconst optionsValues = [\n  { value: \"proteins\", label: \"Proteínas\" },\n  { value: \"carbohydrate\", label: \"Carboidrato\" },\n  { value: \"vegetable\", label: \"Vegetais\" },\n];\nconst MainListMeals = ({ meals }: mealsProps) => {\n  const router = useRouter();\n\n  const [valueSelected, setValueSelected] = useState<SingleValue<selectProps>>({\n    value: \"\",\n    label: \"Filtre por um nutriente\",\n  });\n\n  const { dataUser } = useUserContext();\n  const [offset, setOffset] = useState(0);\n  const [currentPage, setCurrentPage] = useState(0);\n  const [userName, setUserName] = useState(\"\");\n  const [arrayMeals, setArrayMeals] = useState({\n    isLengthArray: false,\n    array: meals,\n  });\n  const itensPerPage = 5;\n\n  const attPageInDeleteMeals = () => {\n    console.log(\"Função att\");\n    setArrayMeals({\n      isLengthArray: false,\n      array: meals,\n    });\n  };\n\n  const startIndex = currentPage * itensPerPage;\n  const endIndex = startIndex + itensPerPage;\n  const sliceArray = (array: MealsRequest[]) =>\n    array.slice(startIndex, endIndex);\n\n  const currentItens = arrayMeals.isLengthArray\n    ? sliceArray(arrayMeals.array)\n    : sliceArray(meals);\n\n  const handleSelectedItem = (selectOption: SingleValue<selectProps>) => {\n    setValueSelected(selectOption);\n  };\n  const filterArrayFromChoice = () => {\n    let newArray: MealsRequest[] = [];\n    let newArrayFiltered: isArrayLengthprops = {} as isArrayLengthprops;\n\n    const setNewArray = () =>\n      (newArrayFiltered = {\n        isLengthArray: true,\n        array: newArray,\n      });\n\n    if (valueSelected?.value === \"proteins\") {\n      newArray = meals.filter((meal) => meal.protein != \"\");\n      setNewArray();\n    } else if (valueSelected?.value === \"carbohydrate\") {\n      newArray = meals.filter((meal) => meal.carbohydrate != \"\");\n      setNewArray();\n    } else if (valueSelected?.value === \"vegetable\") {\n      newArray = meals.filter((meal) => meal.vegetable != \"\");\n      setNewArray();\n    } else {\n      newArray = meals;\n    }\n\n    setArrayMeals(newArrayFiltered);\n  };\n  const goBackLogin = () => {\n    localStorage.clear();\n    router.push(\"/\");\n  };\n\n  useEffect(() => {\n    const name = localStorage.getItem(\"TOKEN_NAME\");\n\n    if (dataUser.name) {\n      setUserName(dataUser.name);\n    } else {\n      name && setUserName(name);\n    }\n  }, []);\n\n  useEffect(() => {\n    filterArrayFromChoice();\n  }, [valueSelected]);\n\n  useEffect(() => {\n    console.log(\"useState atualizou\");\n  }, [arrayMeals]);\n\n  return (\n    <>\n      <S.ContentLogo>\n        <Logo />\n        <S.Logout onClick={goBackLogin}>\n          <S.IconGoBack />\n          Fazer Logout\n        </S.Logout>\n\n        <S.UserName>\n          <S.IconProfle />\n          {userName}\n        </S.UserName>\n        <S.Content>\n          <S.AddNewMeals href=\"/addNewMeals\" passHref>\n            <S.Redirect>\n              <S.IconAdd />\n              Adicionar nova refeição\n            </S.Redirect>\n          </S.AddNewMeals>\n\n          <Select\n            options={optionsValues}\n            value={valueSelected}\n            onChange={handleSelectedItem}\n          />\n        </S.Content>\n      </S.ContentLogo>\n\n      {currentItens.map((meal) => (\n        <ContentMeals\n          meal={meal}\n          key={meal.id}\n          attPageInDeleteMeals={attPageInDeleteMeals}\n        />\n      ))}\n\n      {meals.length > 0 && (\n        <Pagination\n          limit={5}\n          total={meals.length}\n          offset={offset}\n          setOffset={setOffset}\n          setCurrentPage={setCurrentPage}\n        />\n      )}\n    </>\n  );\n};\n\nexport default MainListMeals;\n"
        }
    ]
}